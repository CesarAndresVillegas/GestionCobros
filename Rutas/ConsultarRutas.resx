<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iGlkw6DF/wNCKOajBiHGvgAAAABJRU5ErkJggg==
</value>
  </data>
</root>