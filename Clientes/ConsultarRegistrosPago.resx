<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5MqTEUYAAAAASUVORK5CYII=
</value>
  </data>
</root>